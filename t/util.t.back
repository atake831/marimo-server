#!/usr/bin/perl 

use strict;
use warnings;

use Test::More;

BEGIN { use_ok('lib::model::Util') };

my @test_cases = (
    # _apply_scrubber
    [
        ["abc","abc"],
        ["<td>abc</td>","abc"],
        ["onload","onload"],
        ["<script>javascript</script>",""],
        ["<br>ab","ab"],
        ["http://example","http://example"],
        ["<a href=...></a>",""],
        ["",""],
        [undef, ""],
    ],
); 

my $cnt_test_case = 1; # use_okåˆ†
foreach ( @test_cases ) {
    $cnt_test_case += scalar @$_;
}

my @funcs = (
    \&Util::_apply_scrubber,
);

for ( my $n = 0; $n < @test_cases ; $n++ ) {
    for my $test_case ( @{$test_cases[$n]} ) {
        my ($arg, $expected) = @$test_case;
        my $_arg = defined($arg) ? $arg : "undef";
        print "arg: $_arg expected: $expected $n\n";
        is( $funcs[$n]->($arg), $expected );
    }
}
    
plan(tests=>$cnt_test_case);

